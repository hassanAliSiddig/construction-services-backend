// <auto-generated />
using System;
using AuthApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuthApi.Migrations.AuthDb
{
    [DbContext(typeof(AuthDbContext))]
    partial class AuthDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("AuthApi.Models.AuthUser", b =>
                {
                    b.Property<long>("AuthUserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("ChangedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ChangedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AuthUserID");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("AuthUsers");

                    b.HasData(
                        new
                        {
                            AuthUserID = 1L,
                            AddedBy = "Default",
                            AddedOn = new DateTime(2023, 2, 21, 4, 57, 18, 161, DateTimeKind.Utc).AddTicks(7062),
                            ChangedBy = "Default",
                            ChangedOn = new DateTime(2023, 2, 21, 4, 57, 18, 161, DateTimeKind.Utc).AddTicks(7557),
                            EntityStatus = 1,
                            Password = "P9U@crCnKg8ncv7",
                            Role = 0,
                            Username = "adminSetter"
                        },
                        new
                        {
                            AuthUserID = 2L,
                            AddedBy = "Default",
                            AddedOn = new DateTime(2023, 2, 21, 4, 57, 18, 161, DateTimeKind.Utc).AddTicks(8031),
                            ChangedBy = "Default",
                            ChangedOn = new DateTime(2023, 2, 21, 4, 57, 18, 161, DateTimeKind.Utc).AddTicks(8032),
                            EntityStatus = 1,
                            Password = "Test(li3nt1.",
                            Role = 2,
                            Username = "TestClient1"
                        },
                        new
                        {
                            AuthUserID = 3L,
                            AddedBy = "Default",
                            AddedOn = new DateTime(2023, 2, 21, 4, 57, 18, 161, DateTimeKind.Utc).AddTicks(8035),
                            ChangedBy = "Default",
                            ChangedOn = new DateTime(2023, 2, 21, 4, 57, 18, 161, DateTimeKind.Utc).AddTicks(8035),
                            EntityStatus = 1,
                            Password = "Test(li3nt2#",
                            Role = 2,
                            Username = "TestClient2"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
